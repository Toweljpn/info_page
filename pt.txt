あなたは熟練したWebデザイナー兼開発者です。GitHub Pagesでのホスティングを前提とし、静的なMP4動画をシームレスに組み込んだ製品紹介ページを構築するための完全なソースコード（HTML、CSS、JavaScript）を生成してください。デザインは「オタククール」なコンセプトに基づき、技術的な洗練さと機能美を追求し、簡素ながらも印象的で華美にならないようにしてください。

ページの要件:
静的ホスティング対応: すべての機能はクライアントサイドのJavaScript、HTML5、CSS3で完結し、サーバーサイドの処理は一切不要とします。

製品紹介: 単一の製品を紹介するページ構成とします。

MP4動画のシームレスな組み込み:

製品の動作を示すMP4動画ファイル（ダミーパスとして./assets/videos/product_demo.mp4を使用）をページ内に埋め込みます。

YouTubeなどの外部ストリーミングサービスは使用しません。 動画ファイルはローカルに存在し、ページから直接参照されるものとします。

ユーザーがリンクをクリックするのではなく、ページにアクセスするとすぐに動画プレイヤーが目に入り、再生可能であることがわかるようにします。

ブラウザ標準のコントロール（再生/一時停止、音量、シークバーなど）を直感的に操作できる形で表示します。カスタムUIは不要です。

動画はページの主要コンテンツとして、テキストコンテンツと自然に一体化して表示されるように配置します。

動画の初期読み込みはpreload="metadata"とし、ページパフォーマンスを考慮します。

テキストコンテンツ:

製品の概要、特長、技術仕様など、製品紹介に必要なダミーテキストコンテンツを含めてください。

テキストは動画の前後または周囲に配置され、ユーザーが動画を視聴しつつ読めるようなフローを意識してください。

レスポンシブデザイン: 様々なデバイス（デスクトップ、タブレット、スマートフォン）で適切に表示されるよう、基本的なレスポンシブデザインに対応させてください。

デザイン要件（オタククールコンセプト）:
カラーパレット:

基調色はダーク系（例: ダークグレー、ネイビー、ブラック）を主とし、コードエディタやターミナルを彷彿とさせる配色とします。

アクセントカラーは鮮やかすぎないテクノロジー系の色（例: エレクトリックブルー、ディープパープル、ライムグリーン、サイバーパンクなマゼンタなどから1色選択）を使用し、重要な要素（ボタン、リンク、強調テキスト）に限定的に適用します。

テキストカラーは、ダークな背景に対して視認性の高いホワイト、ライトグレー、またはアクセントカラーを使用します。

タイポグラフィ:

フォントは、等幅フォント（monospace）やサンセリフ体（sans-serif）をベースとし、クリーンで読みやすいものを選択します。

フォントサイズや行間は適切に調整し、視覚的な階層を表現します。

レイアウト:

無駄を排したミニマリストなレイアウトで、コンテンツが中央寄せまたは左寄せで整然と配置されるようにします。

要素間の十分な余白（パディング、マージン）を設け、クリーンな印象を強調します。

グリッドシステムやFlexboxを活用し、秩序だった配置を心がけます。

視覚的要素:

ボタンや入力フィールドは、角がわずかに丸いか、完全に角ばったソリッドなデザインとします。

ホバーエフェクトは控えめに、しかし明確にインタラクションを示すものとします（例: アクセントカラーへの変化、わずかなスケールアップ）。

影やグラデーションは最小限に抑えるか、全く使用しないことで、フラットなデザインを強調します。

アイコンを使用する場合、シンプルで線画ベースのものや、ターミナルで表示されるような記号的なものを選びます。

全体的なトーン:

落ち着いていてプロフェッショナルな雰囲気でありながら、技術への情熱や洗練された機能美を感じさせるデザインとします。

「華美」ではなく「洗練」を目指します。

生成するコードの構造:
HTMLファイル (index.html): ページの骨格とコンテンツを構成します。<video>タグとテキストコンテンツを含めます。

CSSファイル (style.css): デザイン要件に基づいたスタイリングを記述します。レスポンシブ対応も考慮します。

JavaScriptファイル (script.js): 動画の初期化（preload属性の管理など）や、将来的な拡張性（例: イベントリスナーの追加）のための最小限のスクリプトを記述します。特別なカスタムコントロールは不要ですが、HTML5 video APIの基本的な利用は可能であるようにします。

生成するコードは、読みやすく、適切なコメントを含み、効率的でクリーンな構造を持つようにしてください。特に、CSSの変数（Custom Properties）を活用して、カラーパレットなどを管理できるようにすると良いでしょう。